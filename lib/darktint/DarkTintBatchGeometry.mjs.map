{"version":3,"file":"DarkTintBatchGeometry.mjs","sources":["../../src/darktint/DarkTintBatchGeometry.ts"],"sourcesContent":["import { Buffer, BufferUsage, Geometry } from 'pixi.js';\r\n\r\nconst placeHolderBufferData = new Float32Array(1);\r\nconst placeHolderIndexData = new Uint32Array(1);\r\n\r\nexport class DarkTintBatchGeometry extends Geometry\r\n{\r\n    constructor()\r\n    {\r\n        const vertexSize = 7;\r\n\r\n        const attributeBuffer = new Buffer({\r\n            data: placeHolderBufferData,\r\n            label: 'attribute-batch-buffer',\r\n            usage: BufferUsage.VERTEX | BufferUsage.COPY_DST,\r\n            shrinkToFit: false,\r\n        });\r\n\r\n        const indexBuffer = new Buffer({\r\n            data: placeHolderIndexData,\r\n            label: 'index-batch-buffer',\r\n            usage: BufferUsage.INDEX | BufferUsage.COPY_DST, // | BufferUsage.STATIC,\r\n            shrinkToFit: false,\r\n        });\r\n\r\n        const stride = vertexSize * 4;\r\n\r\n        super({\r\n            attributes: {\r\n                aPosition: {\r\n                    buffer: attributeBuffer,\r\n                    format: 'float32x2',\r\n                    stride,\r\n                    offset: 0,\r\n                },\r\n                aUV: {\r\n                    buffer: attributeBuffer,\r\n                    format: 'float32x2',\r\n                    stride,\r\n                    offset: 2 * 4,\r\n                },\r\n                aColor: {\r\n                    buffer: attributeBuffer,\r\n                    format: 'unorm8x4',\r\n                    stride,\r\n                    offset: 4 * 4,\r\n                },\r\n                aDarkColor: {\r\n                    buffer: attributeBuffer,\r\n                    format: 'unorm8x4',\r\n                    stride,\r\n                    offset: 5 * 4,\r\n                },\r\n                aTextureIdAndRound: {\r\n                    buffer: attributeBuffer,\r\n                    format: 'uint16x2',\r\n                    stride,\r\n                    offset: 6 * 4,\r\n                },\r\n            },\r\n            indexBuffer\r\n        });\r\n    }\r\n}\r\n\r\n"],"names":[],"mappings":";;AAEA,MAAM,qBAAA,GAAwB,IAAI,YAAA,CAAa,CAAC,CAAA,CAAA;AAChD,MAAM,oBAAA,GAAuB,IAAI,WAAA,CAAY,CAAC,CAAA,CAAA;AAEvC,MAAM,8BAA8B,QAC3C,CAAA;AAAA,EACI,WACA,GAAA;AACI,IAAA,MAAM,UAAa,GAAA,CAAA,CAAA;AAEnB,IAAM,MAAA,eAAA,GAAkB,IAAI,MAAO,CAAA;AAAA,MAC/B,IAAM,EAAA,qBAAA;AAAA,MACN,KAAO,EAAA,wBAAA;AAAA,MACP,KAAA,EAAO,WAAY,CAAA,MAAA,GAAS,WAAY,CAAA,QAAA;AAAA,MACxC,WAAa,EAAA,KAAA;AAAA,KAChB,CAAA,CAAA;AAED,IAAM,MAAA,WAAA,GAAc,IAAI,MAAO,CAAA;AAAA,MAC3B,IAAM,EAAA,oBAAA;AAAA,MACN,KAAO,EAAA,oBAAA;AAAA,MACP,KAAA,EAAO,WAAY,CAAA,KAAA,GAAQ,WAAY,CAAA,QAAA;AAAA;AAAA,MACvC,WAAa,EAAA,KAAA;AAAA,KAChB,CAAA,CAAA;AAED,IAAA,MAAM,SAAS,UAAa,GAAA,CAAA,CAAA;AAE5B,IAAM,KAAA,CAAA;AAAA,MACF,UAAY,EAAA;AAAA,QACR,SAAW,EAAA;AAAA,UACP,MAAQ,EAAA,eAAA;AAAA,UACR,MAAQ,EAAA,WAAA;AAAA,UACR,MAAA;AAAA,UACA,MAAQ,EAAA,CAAA;AAAA,SACZ;AAAA,QACA,GAAK,EAAA;AAAA,UACD,MAAQ,EAAA,eAAA;AAAA,UACR,MAAQ,EAAA,WAAA;AAAA,UACR,MAAA;AAAA,UACA,QAAQ,CAAI,GAAA,CAAA;AAAA,SAChB;AAAA,QACA,MAAQ,EAAA;AAAA,UACJ,MAAQ,EAAA,eAAA;AAAA,UACR,MAAQ,EAAA,UAAA;AAAA,UACR,MAAA;AAAA,UACA,QAAQ,CAAI,GAAA,CAAA;AAAA,SAChB;AAAA,QACA,UAAY,EAAA;AAAA,UACR,MAAQ,EAAA,eAAA;AAAA,UACR,MAAQ,EAAA,UAAA;AAAA,UACR,MAAA;AAAA,UACA,QAAQ,CAAI,GAAA,CAAA;AAAA,SAChB;AAAA,QACA,kBAAoB,EAAA;AAAA,UAChB,MAAQ,EAAA,eAAA;AAAA,UACR,MAAQ,EAAA,UAAA;AAAA,UACR,MAAA;AAAA,UACA,QAAQ,CAAI,GAAA,CAAA;AAAA,SAChB;AAAA,OACJ;AAAA,MACA,WAAA;AAAA,KACH,CAAA,CAAA;AAAA,GACL;AACJ;;;;"}