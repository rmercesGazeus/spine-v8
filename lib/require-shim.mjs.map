{"version":3,"file":"require-shim.mjs","sources":["../src/require-shim.ts"],"sourcesContent":["/** ****************************************************************************\r\n * Spine Runtimes License Agreement\r\n * Last updated July 28, 2023. Replaces all prior versions.\r\n *\r\n * Copyright (c) 2013-2023, Esoteric Software LLC\r\n *\r\n * Integration of the Spine Runtimes into software or otherwise creating\r\n * derivative works of the Spine Runtimes is permitted under the terms and\r\n * conditions of Section 2 of the Spine Editor License Agreement:\r\n * http://esotericsoftware.com/spine-editor-license\r\n *\r\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\r\n * otherwise create derivative works of the Spine Runtimes (collectively,\r\n * \"Products\"), provided that each user of the Products must obtain their own\r\n * Spine Editor license and redistribution of the Products in any form must\r\n * include this license and copyright notice.\r\n *\r\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\r\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\r\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\r\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *****************************************************************************/\r\n\r\ndeclare global\r\n{\r\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n    // @ts-ignore\r\n    // eslint-disable-next-line no-var\r\n    var require: any;\r\n    // eslint-disable-next-line no-var\r\n    var PIXI: any;\r\n}\r\n\r\nif (typeof window !== 'undefined' && window.PIXI)\r\n{\r\n    const prevRequire = window.require;\r\n\r\n    // eslint-disable-next-line consistent-return\r\n    (window as any).require = (x: string) =>\r\n    {\r\n        if (prevRequire) return prevRequire(x);\r\n        else if (x.startsWith('@pixi/') || x.startsWith('pixi.js')) return window.PIXI;\r\n    };\r\n}\r\n\r\nexport { };\r\n"],"names":[],"mappings":"AAuCA,IAAI,OAAO,MAAA,KAAW,WAAe,IAAA,MAAA,CAAO,IAC5C,EAAA;AACI,EAAA,MAAM,cAAc,MAAO,CAAA,OAAA,CAAA;AAG3B,EAAC,MAAA,CAAe,OAAU,GAAA,CAAC,CAC3B,KAAA;AACI,IAAI,IAAA,WAAA;AAAa,MAAA,OAAO,YAAY,CAAC,CAAA,CAAA;AAAA,SAAA,IAC5B,EAAE,UAAW,CAAA,QAAQ,CAAK,IAAA,CAAA,CAAE,WAAW,SAAS,CAAA;AAAG,MAAA,OAAO,MAAO,CAAA,IAAA,CAAA;AAAA,GAC9E,CAAA;AACJ"}